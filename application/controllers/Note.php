<?php
/*
 * Generated by CRUDigniter v3.0 Beta
 * www.crudigniter.com
 */

class Note extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Note_model');
    }

    /*
     * Listing of notes
     */
    function index()
    {
        $data['notes'] = $this->Note_model->get_all_notes();

        $this->load->view('templates/header');
        $this->load->view('note/index',$data);
        $this->load->view('templates/footer');
    }

    /*
     * Adding a new note
     */
    function add()
    {
        $this->load->library('form_validation');

		$this->form_validation->set_rules('note_title','Note Title','required');

		if($this->form_validation->run())
        {
            $params = array(
				'note_title' => $this->input->post('note_title'),
				'note_body' => $this->input->post('note_body'),
				'note_date' => $this->input->post('note_date'),
				'series_id' => $this->input->post('series_id'),
				'speaker_id' => $this->input->post('speaker_id'),
            );

            $note_id = $this->Note_model->add_note($params);
            redirect('note/index');
        }
        else
        {

			$this->load->model('Series_model');
			$data['all_series'] = $this->Series_model->get_all_series();

			$this->load->model('Speaker_model');
			$data['all_speaker'] = $this->Speaker_model->get_all_speaker();

            $this->load->view('templates/header');
            $this->load->view('note/add',$data);
            $this->load->view('templates/footer');
        }
    }

    /*
     * Editing a note
     */
    function edit($note_id)
    {
        // check if the note exists before trying to edit it
        $data['note'] = $this->Note_model->get_note($note_id);

        if(isset($data['note']['note_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('note_date','Note Date','required');
			$this->form_validation->set_rules('note_title','Note Title','required');

			if($this->form_validation->run())
            {
                $params = array(
					'note_title' => $this->input->post('note_title'),
					'note_body' => $this->input->post('note_body'),
					'note_date' => $this->input->post('note_date'),
					'series_id' => $this->input->post('series_id'),
					'speaker_id' => $this->input->post('speaker_id'),
                );

                $this->Note_model->update_note($note_id,$params);
                redirect('note/index');
            }
            else
            {
				$this->load->model('Series_model');
				$data['all_series'] = $this->Series_model->get_all_series();

				$this->load->model('Speaker_model');
				$data['all_speaker'] = $this->Speaker_model->get_all_speaker();

                $this->load->view('templates/header');
                $this->load->view('note/edit',$data);
				        $this->load->view('templates/footer');
            }
        }
        else
            show_error('The note you are trying to edit does not exist.');
    }

    /*
     * Deleting note
     */
    function remove($note_id)
    {
        $note = $this->Note_model->get_note($note_id);

        // check if the note exists before trying to delete it
        if(isset($note['note_id']))
        {
            $this->Note_model->delete_note($note_id);
            redirect('note/index');
        }
        else
            show_error('The note you are trying to delete does not exist.');
    }

}
