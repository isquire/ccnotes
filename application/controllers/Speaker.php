<?php
/* 
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */
 
class Speaker extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Speaker_model');
    } 

    /*
     * Listing of speaker
     */
    function index()
    {
        $data['speaker'] = $this->Speaker_model->get_all_speaker();

        $this->load->view('templates/header');
        $this->load->view('speaker/index',$data);
        $this->load->view('templates/footer');
    }

    /*
     * Adding a new speaker
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('speaker_name','Speaker Name','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'speaker_name' => $this->input->post('speaker_name'),
            );
            
            $speaker_id = $this->Speaker_model->add_speaker($params);
            redirect('speaker/index');
        }
        else
        {
            $this->load->view('templates/header');
            $this->load->view('speaker/add');
            $this->load->view('templates/footer');
        }
    }  

    /*
     * Editing a speaker
     */
    function edit($speaker_id)
    {   
        // check if the speaker exists before trying to edit it
        $data['speaker'] = $this->Speaker_model->get_speaker($speaker_id);
        
        if(isset($data['speaker']['speaker_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('speaker_name','Speaker Name','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'speaker_name' => $this->input->post('speaker_name'),
                );

                $this->Speaker_model->update_speaker($speaker_id,$params);            
                redirect('speaker/index');
            }
            else
            {
                $this->load->view('templates/header');
                $this->load->view('speaker/edit',$data);
                $this->load->view('templates/footer',$data);
            }
        }
        else
            show_error('The speaker you are trying to edit does not exist.');
    } 

    /*
     * Deleting speaker
     */
    function remove($speaker_id)
    {
        $speaker = $this->Speaker_model->get_speaker($speaker_id);

        // check if the speaker exists before trying to delete it
        if(isset($speaker['speaker_id']))
        {
            $this->Speaker_model->delete_speaker($speaker_id);
            redirect('speaker/index');
        }
        else
            show_error('The speaker you are trying to delete does not exist.');
    }
    
}
